@page "/AdminPanel"
@using EventApp.Services
@using Microsoft.AspNetCore.Authorization
@using EventApp.Entities
@inject IEventService EventService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider GetAuthenticationStateAsync
@attribute [RenderModeInteractiveServer]
@attribute [Authorize]
<PageTitle>Panel Administratora</PageTitle>
<AuthorizeView>
    @if (context.User.IsInRole("Admin"))
    {
        @foreach (var _event in events)
        {
            <tr>
                <td>@_event.Name</td>
                <td>@_event.Description</td>
                <button class="btn btn-primary" @onclick="(() => UpdateEvent(_event.Id))">Edytuj</button>
                <button @onclick="(() => DeleteEvent(_event))" class="btn btn-danger">Usuń wydarzenie</button>
                
            </tr>
        }
    }
</AuthorizeView>
@code
{
    private List<Entities.Event> events = new();
    private string id;
    protected override async Task OnInitializedAsync()
    {
        events = EventService.GetEvents();
        var authstate = await GetAuthenticationStateAsync.GetAuthenticationStateAsync();
        id = authstate.User.Identity.Name;
    }

    void UpdateEvent(int id)
    {
        NavigationManager.NavigateTo($"UpdateEvent/{id}");
    }

    private void DeleteEvent(Entities.Event _event)
    {
        EventService.RemoveEvent(_event);
        NavigationManager.Refresh();
    }
}
